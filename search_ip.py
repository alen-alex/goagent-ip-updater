# -*- coding:utf8 -*-

import platform
import socket
import time
from multiprocessing.dummy import Pool as ThreadPool

from insert_iplist import update_ini

default_ip_list = "218.253.0.174|218.253.0.80|218.253.0.81|218.253.0.181|218.253.0.154|218.253.0.91|218.253.0.148|218.253.0.82|218.189.25.159|210.61.221.172|218.253.0.86|218.253.0.87|218.253.0.152|218.253.0.89|218.253.0.88|218.189.25.174|218.253.0.144|203.66.124.167|218.253.0.159|203.66.124.231|218.253.0.84|218.189.25.181|210.61.221.114|203.66.124.241|210.61.221.113|202.39.143.93|210.61.221.182|202.39.143.104|61.219.131.113|61.219.131.94|61.219.131.118|61.219.131.89|202.39.143.98|61.219.131.103|218.253.0.187|61.219.131.237|218.253.0.163|61.219.131.212|203.66.124.153|203.66.124.237|61.219.131.109|203.66.124.178|203.66.124.251|210.61.221.119|203.66.124.222|203.66.124.172|203.66.124.152|203.66.124.163|218.253.0.170|203.66.124.168|210.61.221.177|203.66.124.162|210.61.221.123|202.39.143.35|203.66.124.177|103.25.178.42|103.25.178.19|103.25.178.27|103.25.178.30|203.66.124.148|218.176.242.20|203.66.124.173|218.176.242.118|218.176.242.109|218.176.242.168|218.189.25.167|203.116.165.187|203.66.124.236|218.176.242.103|218.176.242.119|218.189.25.153|203.116.165.231|218.253.0.185|218.176.242.88|218.189.25.166|203.66.124.217|202.39.143.119|218.176.242.178|218.176.242.158|218.176.242.39|203.66.124.226|203.66.124.232|218.189.25.160|61.219.131.222|218.176.242.30|218.176.242.251|203.66.124.227|118.174.25.109|218.176.242.157|203.66.124.247|218.253.0.85|218.176.242.29|210.61.221.94|218.176.242.148|218.176.242.108|202.39.143.109|203.116.165.153|203.116.165.251|93.123.23.18|203.66.124.158|1.179.250.88|203.66.124.187|203.66.124.157|103.25.178.38|218.189.25.180|203.116.165.173|203.211.0.55|218.253.0.177|203.211.0.44|203.211.0.20|178.45.251.123|178.45.251.113|1.179.251.246|203.116.165.148|203.211.0.59|203.211.0.24|203.211.0.25|93.123.23.24|203.116.165.152|123.205.251.80|203.66.124.246|218.253.0.176|202.39.143.55|218.176.242.98|203.117.34.187|203.117.34.148|62.197.198.240|61.219.131.108|123.205.251.112|62.197.198.227|210.61.221.168|61.219.131.226|202.39.143.123|60.199.175.117|218.253.0.165|218.253.0.90|123.205.250.80|62.201.216.212|202.39.143.113|210.61.221.183|203.66.124.221|61.219.131.251|218.253.0.155|61.219.131.88|203.66.124.216|218.176.242.173|61.219.131.98|202.39.143.89|203.66.124.183|61.219.131.104|203.66.124.212|203.66.124.182|218.189.25.146|61.219.131.114|210.61.221.173|210.61.221.157|210.61.221.158|202.39.143.30|61.219.131.236|202.39.143.29|202.39.143.39|210.61.221.109|202.39.143.108|202.39.143.20|61.219.131.84|61.219.131.93|210.61.221.178|210.61.221.104|202.39.143.84|61.219.131.123|210.61.221.103|202.39.143.88|210.61.221.153|61.219.131.247|210.61.221.108|210.61.221.163|210.61.221.99|61.219.131.241|210.61.221.88|210.61.221.84|61.219.131.232|61.219.131.99|210.61.221.89|210.61.221.167|210.61.221.152|210.61.221.187|202.39.143.114|61.219.131.119|202.39.143.59|210.61.221.162|210.61.221.98|210.61.221.148|203.165.13.223|203.165.13.210|61.19.1.103|61.19.1.109|218.253.0.84|61.19.1.94|203.165.14.223|61.19.1.88|61.19.1.93|61.19.1.84|61.19.1.50|61.19.1.40|61.19.1.45|61.19.1.54|61.19.1.49|61.19.1.30|61.19.1.55|218.176.242.54|218.253.0.87|111.168.255.35|111.168.255.25|111.168.255.113|111.168.255.88|218.176.242.84|111.168.255.177|218.176.242.177|218.176.242.178|218.176.242.167|203.116.165.217|210.139.253.98|203.117.34.163|106.162.216.40|203.117.34.187|106.162.198.98|210.139.253.39|106.162.198.84|210.139.253.109|210.139.253.247|210.139.253.168|210.139.253.172|218.189.25.167|106.162.192.153|61.219.131.114|121.78.74.80|121.78.74.88|210.61.221.168|210.153.73.40|60.199.175.46|60.199.175.24|203.66.124.247|203.66.124.158|61.219.131.247|203.66.124.216|203.66.124.232|203.66.124.172|61.219.131.251|61.219.131.236|202.39.143.84|61.219.131.246|203.211.0.39|203.211.0.49|203.211.0.55|178.45.251.93|210.153.73.123"

def get_iplist():
    try:
        with open("iplist","rb") as f:
            iplist = f.read()
            return iplist.split("|")
    except IOError as e:
        return default_ip_list.split("|")

def adapt_encoding(msg):
    os_type = platform.platform().lower()
    if os_type.startswith("windows"):
        return msg.decode("utf8").encode("gbk")
    else:
        return msg

def get_connect_time(ipaddress):
    HTTPS_PORT = 443
    port = HTTPS_PORT   # use HTTPS default port to connect
    timeout = 1         # set availability time to 1 sec
    try:
        socket.setdefaulttimeout(timeout)
        s = socket.socket()
        start = time.time()
        s.connect((ipaddress, port))
        end = time.time()
    except:
        msg = 'Connect %s timeout' %(ipaddress)
        return (None,ipaddress,msg)
    else:  
        connect_time = int((end-start)*1000) # convert time to milliseconds
        msg = 'found ip %s 连接时间:%s ms' %(ipaddress,connect_time)
        msg = adapt_encoding(msg)
        return (connect_time,ipaddress,msg)
    finally:
        s.close()

def get_useful_ip(iplist):
    usefulip = []
    pool = ThreadPool(8)
    while iplist:
        ip_list = iplist[:min(len(iplist),8)]
        results = pool.map(get_connect_time,ip_list)
        for delay,ip,msg in results:
            print(msg)
            if delay:
                usefulip.append((delay,ip))
        iplist = iplist[8:]
    usefulip.sort()     # sort reachable ips by the order of delay
    return [ip for delay,ip in usefulip]    # return just the ip list

def filter_useful_ip(iplist):
    print('get a total of %s candidate ips'%(len(iplist)))
    print('starting reachablity testing...')
    print('-'*30)
    
    usefulip = get_useful_ip(iplist)
    print(adapt_encoding("共找到%s个可用的ip地址")%(len(usefulip)))
    print(usefulip)
    with open('output.txt', 'wb') as f:
        text='|'.join(usefulip)
        f.write(text)

def main():
    try:
        iplist = get_iplist()
        filter_useful_ip(iplist)
    except Exception as e:
        print(e)
    else:
        try:
            update_ini()
        except IOError as e:
            print(adapt_encoding("请将程序放在goagent目录下，"+
                "与local和server文件夹并列，以自动更新goagent配置文件"))
        except Exception as e:
            print(e)
        else:
            print(adapt_encoding("配置文件更新成功，请重启goagent服务"))
    exit()

def exit():
    print(adapt_encoding("输入回车退出..."))
    a = raw_input()

if __name__ == '__main__':
    main()